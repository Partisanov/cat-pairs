name: Deploy to Yandex Cloud

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push client Docker image
        run: |
          docker build -t kpartisanov/practicum-client:latest -f Dockerfile.client .
          docker push kpartisanov/practicum-client:latest

      - name: Build and push server Docker image
        run: |
          docker build -t kpartisanov/practicum-server:latest -f Dockerfile.server .
          docker push kpartisanov/practicum-server:latest

      - name: Deploy to Yandex Cloud
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            export CLIENT_HOST=${{ secrets.CLIENT_HOST }}
            export SERVER_HOST=${{ secrets.SERVER_HOST }}
            export CLIENT_PORT=${{ secrets.CLIENT_PORT }}
            export SERVER_PORT=${{ secrets.SERVER_PORT }}
            export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            export POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            export SECRET_KEY=${{ secrets.SECRET_KEY }}
            export PGADMIN_EMAIL=${{ secrets.PGADMIN_EMAIL }}
            export PGADMIN_PASSWORD=${{ secrets.PGADMIN_PASSWORD }}
            cd /path/to/your/project
            docker-compose down
            docker-compose pull
            docker-compose up -d
  EOF
